
package logic;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author Reyhan
 */
public class MisterX extends Player{
    int numOfTurns;
    private int lastShowPos;
    private List<Integer> journeyBoard; // store all used ticket
    public MisterX(int id, playerType type, boolean isAI,  int numOfTrains, int numOfBuses, int numOfTaxis, int numOfBoats) {
        super(id, type, isAI,numOfTrains, numOfBuses, numOfTaxis,  numOfBoats);
          this.numOfTurns =0;
          lastShowPos =0;
          journeyBoard = new ArrayList<>();
    }
      @Override
    protected List<Integer> getJournyList(){
        return journeyBoard;
    }
    
    @Override
    protected int getnumOfTurns(){
        return numOfTurns;
    }
    
    @Override
    protected void incNumOfTurns(){
        numOfTurns++;
    }
    @Override
    protected int lastShownPos(){
        return lastShowPos;
    }
    @Override
    protected void addToJourneyList(Tickets ticket){
        journeyBoard.add(Tickets.valueOf(ticket.toString()).ordinal());
    }
    @Override
     List<Station> getAllNeighbors(Board board, Player[] p){
        List<Station> temp = new LinkedList<>();
        for (int i = 0; i < board.getAllStations().size(); i++) {
            if(board.getAllStations().get(i).isNeihbor(p[0].getCurrStation()-1)){
                temp.add(board.getAllStations().get(i));
            }
            
        }
        for (int i = 0; i < temp.size(); i++) {//return all neighbor without checking that have ticket or not
            System.out.println("temp ham ** "+ temp.get(i).getIdentifier());
            
        }
        return temp;
    }
}
