package logic;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.stream.JsonWriter;
import com.sun.corba.se.impl.orbutil.ObjectWriter;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.lang.reflect.Type;
import javafx.stage.FileChooser;
import javafx.stage.FileChooser.ExtensionFilter;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class IO {

    String inPath = "C:\\Users\\Reyhan\\Desktop\\map.json";
    FileOutputStream f = null;
    FileChooser fileChooser = null;
    OutputStreamWriter o = null;

    public JSONArray getJsonValues() throws JSONException {
        Gson gson = new Gson();
        JSONArray jarray = null;
        try (FileReader reader = new FileReader("net.json")) {
            Object obj;
            obj = gson.fromJson(reader, Object.class);
            JSONObject jo2 = new JSONObject(obj.toString());
            //jarray = jo2.getJSONObject(obj.toString()).getJSONArray("stations");
            jarray = jo2.getJSONArray("stations");
            for (int i = 0; i < jarray.length(); i++) {
                JSONObject pos = jarray.getJSONObject(i);
                // Map2 m = jarray.get(i);

                // System.out.println(pos.get("position"));
            }

        } catch (FileNotFoundException e) {
        } catch (IOException e) {
        }
        return jarray;
    }

    public static boolean isJSONValid(String test) {
        try {
            JSONObject jsonObject = new JSONObject(test);
        } catch (JSONException ex) {
            // edited, to include @Arthur's comment
            // e.g. in case JSONArray is valid as well...
            try {
                JSONArray jsonArray = new JSONArray(test);
            } catch (JSONException ex1) {
                return false;
            }
        }
        return true;
    }

    public void saveField(GUIConnector gui, Player[] p, int idxPlayer) throws IOException, JSONException {

        FileChooser chooser = new FileChooser();
        chooser.setInitialDirectory(new File(System.getProperty("user.dir")));
        chooser.setTitle("Choose location To Save Report");
        File selectedFile = null;
        if (selectedFile == null) {
            chooser.getExtensionFilters().addAll(new FileChooser.ExtensionFilter(".json", ".json"),
                    new ExtensionFilter(".txt", ".txt"));
            selectedFile = chooser.showSaveDialog(null);
        }
        if (selectedFile != null) {
            // FileOutputStream f = new FileOutputStream(new File(selectedFile.getPath()));
            // OutputStreamWriter o = new OutputStreamWriter(f);
            try {
                // FileOutputStream f = new FileOutputStream(new File(selectedFile.getPath()));
                // OutputStreamWriter o = new OutputStreamWriter(f);
                //JsonWriter writer = new JsonWriter(new FileWriter(selectedFile.getPath()));
                // ObjectWriter writer = mapper.defaultPrettyPrintingWriter();
                Player user = new Player(1, playerType.BLACK, true, 4, 3, 3, 3);
                Gson gson = new GsonBuilder().create();
                JSONObject sampleObject = new JSONObject();
                sampleObject.put("MISTERX", "45");
                sampleObject.put("age", 35);
                
                 sampleObject.put("Tokens", 35);
                JSONObject someProperty = new JSONObject();
                //JSONArray properties = new JSONArray();
               // properties.put(sampleObject);
               // properties.put(someProperty);
                BufferedWriter writer = new BufferedWriter(new FileWriter(selectedFile.getPath()));
                gson.toJson(sampleObject, writer);
                //  JSON.write(writer, data);
                //  writer.endObject();
                writer.flush();
                writer.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }

}
